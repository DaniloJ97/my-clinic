/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.kartoni;

import domen.Karton;
import domen.MedicinskaSestra;
import forme.FormMode;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import kontroler.Kontroler;
import transfer.ServerskiOdgovor;
import util.ResponseStatus;
import validacija.OpstaValidacija;

/**
 *
 * @author Danilo
 */
public class DodavanjeKartonaForma extends javax.swing.JDialog {
    private Karton karton;
    private FormMode formMode;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");

    /**
     * Creates new form DodavanjeKartona
     */
    public DodavanjeKartonaForma(java.awt.Frame parent, boolean modal, FormMode formMode, Karton karton) {
        super(parent, modal);
        initComponents();
        this.formMode=formMode;
        this.karton = karton;
        centriraj();
        postaviNepromenljivostDimenzija();
        srediFormu();
        //popuniId();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelKarton = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdKartona = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtImePacijenta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezimePacijenta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtJMBG = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDatumRodjenja = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMestoRodjenja = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAdresa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBrojTelefona = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtLBO = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtBrojKnjizice = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnIzmeniKarton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelKarton.setBorder(javax.swing.BorderFactory.createTitledBorder("Dodaj karton"));

        jLabel1.setText("ID kartona:");

        jLabel2.setText("Ime pacijenta:");

        jLabel3.setText("Prezime pacijenta:");

        jLabel4.setText("JMBG pacijenta:");

        jLabel5.setText("Datum rođenja:");

        jLabel6.setText("Mesto rođenja:");

        jLabel7.setText("Adresa:");

        jLabel8.setText("Broj telefona pacijenta:");

        jLabel9.setText("E-mail pacijenta:");

        jLabel11.setText("LBO:");

        jLabel10.setText("Broj knjižice:");

        javax.swing.GroupLayout panelKartonLayout = new javax.swing.GroupLayout(panelKarton);
        panelKarton.setLayout(panelKartonLayout);
        panelKartonLayout.setHorizontalGroup(
            panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKartonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelKartonLayout.createSequentialGroup()
                        .addComponent(txtIdKartona, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelKartonLayout.createSequentialGroup()
                        .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBrojTelefona, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMestoRodjenja, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBrojKnjizice, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtJMBG, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelKartonLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtImePacijenta, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrezimePacijenta, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(txtLBO)
                            .addComponent(txtDatumRodjenja)
                            .addComponent(txtAdresa)
                            .addComponent(txtEmail))
                        .addGap(96, 96, 96))))
        );
        panelKartonLayout.setVerticalGroup(
            panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKartonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdKartona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtImePacijenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrezimePacijenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtLBO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtBrojKnjizice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMestoRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKartonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        btnSacuvaj.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSacuvaj.setText("Sačuvaj karton");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnIzmeniKarton.setText("Izmeni karton");
        btnIzmeniKarton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniKartonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelKarton, javax.swing.GroupLayout.PREFERRED_SIZE, 646, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnIzmeniKarton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelKarton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeniKarton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        izvrsiOperaciju();
        
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniKartonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniKartonActionPerformed
        izvrsiOperaciju();
    }//GEN-LAST:event_btnIzmeniKartonActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniKarton;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panelKarton;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtBrojKnjizice;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JTextField txtDatumRodjenja;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIdKartona;
    private javax.swing.JTextField txtImePacijenta;
    private javax.swing.JTextField txtJMBG;
    private javax.swing.JTextField txtLBO;
    private javax.swing.JTextField txtMestoRodjenja;
    private javax.swing.JTextField txtPrezimePacijenta;
    // End of variables declaration//GEN-END:variables

    private void popuniId() {
        Karton karton = new Karton();
        Long id=Kontroler.getInstanca().vratiMaxId(karton);
        txtIdKartona.setText(id+"");
        txtIdKartona.setEditable(false);
        
    }

    private void centriraj() {
        setLocationRelativeTo(null);
    }

    private void postaviNepromenljivostDimenzija() {
        setResizable(false);
    }
    
    private void izvrsiOperaciju(){
        String kartonIDString = txtIdKartona.getText();
        String ime = txtImePacijenta.getText();
        String prezime = txtPrezimePacijenta.getText();
        String jmbg = txtJMBG.getText();
        String lbo = txtLBO.getText();
        String brojKnjizice = txtBrojKnjizice.getText();
        String datum = txtDatumRodjenja.getText();
        String mestoRodjenja = txtMestoRodjenja.getText();
        String adresa = txtAdresa.getText();
        String brojTelefona = txtBrojTelefona.getText();
        String email = txtEmail.getText();
        if(!OpstaValidacija.getInstanca().daLiSuPoljaPopunjena(txtImePacijenta, txtPrezimePacijenta, txtJMBG, txtLBO, txtBrojKnjizice, txtDatumRodjenja, txtMestoRodjenja, txtAdresa,txtBrojTelefona,txtEmail)){
            JOptionPane.showMessageDialog(null, OpstaValidacija.getInstanca().getPoruka());
            return;
        }
        Long kartonID = Long.parseLong(kartonIDString);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy.");
        Date datumRodjenja = null;
        try {
            datumRodjenja = sdf.parse(datum);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum mora biti u formatu dd.MM.yyyy!");
            Logger.getLogger(DodavanjeKartonaForma.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        
        String regex ="[0-9]+";
        if(!jmbg.matches(regex)){
            JOptionPane.showMessageDialog(this, "JMBG mora sadržati isključivo cifre!");
            return;
        }
        if(jmbg.length()!=13){
            JOptionPane.showMessageDialog(this, "JMBG mora imati dužinu od 13 cifara!");
            return;
        }
        if(!lbo.matches(regex)){
            JOptionPane.showMessageDialog(this, "LBO mora sadržati isključivo cifre!");
            return;
        }
        if(lbo.length()!=11){
            JOptionPane.showMessageDialog(this, "LBO mora imati dužinu od 11 cifara!");
            return;
        }
        if(!brojKnjizice.matches(regex)){
            JOptionPane.showMessageDialog(this, "Broj knjižice mora sadržati isključivo cifre!");
            return;
        }
        if(brojKnjizice.length()!=11){
            JOptionPane.showMessageDialog(this, "Broj knjižice mora imati dužinu od 11 cifara!");
            return;
        }
        String regexEmail="^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$";
        if(!email.matches(regexEmail)){
            JOptionPane.showMessageDialog(this, "Niste uneli e-mail u odgovarajućem formatu!");
            return;
        }
        MedicinskaSestra medicinskaSestra = (MedicinskaSestra) Kontroler.getInstanca().getUlogovani();
        System.out.println("Sve je u redu!");
        if(formMode.equals(FormMode.FORM_ADD)){
        Karton karton = new Karton(kartonID, ime, prezime, jmbg, lbo, brojKnjizice, datumRodjenja, mestoRodjenja, adresa, brojTelefona, email, medicinskaSestra);
        
        ServerskiOdgovor odgovor = Kontroler.getInstanca().sacuvajKarton(karton);
        if(odgovor.getResponseStatus()==ResponseStatus.ERROR){
            JOptionPane.showMessageDialog(this, odgovor.getPoruka(),"Greška!",JOptionPane.ERROR_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(this, odgovor.getPoruka(), "Poruka", JOptionPane.INFORMATION_MESSAGE);
            ocistiPolja();
            popuniId();
        }
        }
        if(formMode.equals(FormMode.FORM_UPDATE)){
            karton.setAdresa(adresa);
            karton.setBrojKnjizice(brojKnjizice);
            karton.setBrojTelefona(brojTelefona);
            karton.setDatumRodjenja(datumRodjenja);
            karton.setEmail(email);
            karton.setIme(ime);
            karton.setJmbg(jmbg);
            karton.setLbo(lbo);
            karton.setMedicinskaSestra(medicinskaSestra);
            karton.setMestoRodjenja(mestoRodjenja);
            karton.setPrezime(prezime);
            
            ServerskiOdgovor odgovor = Kontroler.getInstanca().izmeniKarton(karton);
            if(odgovor.getResponseStatus()==ResponseStatus.ERROR){
                JOptionPane.showMessageDialog(this, odgovor.getPoruka(), "Greška",JOptionPane.ERROR_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, odgovor.getPoruka(), "Poruka",JOptionPane.INFORMATION_MESSAGE);
                PretragaKartonaForma pkf = (PretragaKartonaForma) getParent();
                pkf.pretraga();
                this.dispose();                
            }
            
        }
    }

    private void ocistiPolja() {
        txtAdresa.setText("");
        txtBrojKnjizice.setText("");
        txtBrojTelefona.setText("");
        txtDatumRodjenja.setText("");
        txtEmail.setText("");
        txtImePacijenta.setText("");
        txtJMBG.setText("");
        txtLBO.setText("");
        txtMestoRodjenja.setText("");
        txtPrezimePacijenta.setText("");
    }

    private void srediFormu() {
        if(formMode.equals(FormMode.FORM_ADD)){
            btnIzmeniKarton.setVisible(false);
            btnSacuvaj.setVisible(true);
            popuniId();
            setTitle("Dodaj novi karton");
            Border border = BorderFactory.createTitledBorder("Dodavanje kartona");
            panelKarton.setBorder(border);
        }
        if(formMode.equals(FormMode.FORM_VIEW)){
            btnIzmeniKarton.setVisible(false);
            btnSacuvaj.setVisible(false);
            setTitle("Prikaži karton");
            Border border = BorderFactory.createTitledBorder("Prikaz kartona");
            panelKarton.setBorder(border);
            izvuciPodatke();
            zabraniIzmene();
        }
        if(formMode.equals(FormMode.FORM_UPDATE)){
            btnSacuvaj.setVisible(false);
            btnIzmeniKarton.setVisible(true);
            setTitle("Izmeni karton");
            Border border = BorderFactory.createTitledBorder("Izmena kartona");
            panelKarton.setBorder(border);
            izvuciPodatke();
        }
    }
    
    private void izvuciPodatke(){
            txtAdresa.setText(karton.getAdresa());
            txtBrojKnjizice.setText(karton.getBrojKnjizice());
            txtBrojTelefona.setText(karton.getBrojTelefona());
            txtDatumRodjenja.setText(sdf.format(karton.getDatumRodjenja()));
            txtEmail.setText(karton.getEmail());
            txtIdKartona.setText(karton.getKartonID()+"");
            txtImePacijenta.setText(karton.getIme());
            txtJMBG.setText(karton.getJmbg());
            txtLBO.setText(karton.getLbo());
            txtMestoRodjenja.setText(karton.getMestoRodjenja());
            txtPrezimePacijenta.setText(karton.getPrezime());
            txtIdKartona.setEditable(false);
    }

    private void zabraniIzmene() {
            txtAdresa.setEditable(false);
            txtBrojKnjizice.setEditable(false);
            txtBrojTelefona.setEditable(false);
            txtDatumRodjenja.setEditable(false);
            txtEmail.setEditable(false);
            txtIdKartona.setEditable(false);
            txtImePacijenta.setEditable(false);
            txtJMBG.setEditable(false);
            txtLBO.setEditable(false);
            txtMestoRodjenja.setEditable(false);
            txtPrezimePacijenta.setEditable(false);
    }
    
    
}

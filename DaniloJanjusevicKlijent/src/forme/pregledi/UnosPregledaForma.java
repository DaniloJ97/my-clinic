/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.pregledi;

import domen.Dijagnoza;
import domen.Karton;
import domen.Korisnik;
import domen.Lek;
import domen.Lekar;
import domen.Pregled;
import domen.Recept;
import domen.ZakazaniPregled;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import kontroler.Kontroler;
import modeli.ReceptTabelaModel;
import modeli.ZakazaniPregledTabelaModel;
import transfer.ServerskiOdgovor;
import util.ResponseStatus;

/**
 *
 * @author Danilo
 */
public class UnosPregledaForma extends javax.swing.JDialog {
    private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy. HH:mm");
    private List<Lek> lekovi;
    private ZakazaniPregled zakazani;

    /**
     * Creates new form UnosPregledaForma
     */
    public UnosPregledaForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centriraj();
        postaviNepromenljivostDimenzija();
        ucitajListuKartona();
        ucitajListuLekara();
        ucitajListuDijagnoza();
        ucitajListuLekova();
        postaviDatumObavljanjaPregleda();
        srediRBZakazan();
        srediDugme();
        srediTabeluZakazanihPregleda();
        srediTabeluRecepata();
        srediKoloneRecepata();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbPacijenti = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cbLekari = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtDatumObavljanjaPregleda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        radioButtonDa = new javax.swing.JRadioButton();
        radioButtonNe = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaSimptomi = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        cbDijagnoza = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaRecepti = new javax.swing.JTable();
        jButtonDodajRecept = new javax.swing.JButton();
        jButtonObrisiRecept = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaZakazaniPregledi = new javax.swing.JTable();
        btnIzaberiZakazaniPregled = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unesi pregled");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unos pregleda"));

        jLabel1.setText("Pacijent:");

        cbPacijenti.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Lekar:");

        cbLekari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Datum obavljanja pregleda:");

        jLabel4.setText("Zakazan pregled:");

        radioButtonDa.setText("Da");
        radioButtonDa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonDaActionPerformed(evt);
            }
        });

        radioButtonNe.setText("Ne");
        radioButtonNe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonNeActionPerformed(evt);
            }
        });

        jLabel5.setText("Simptomi:");

        jTextAreaSimptomi.setColumns(20);
        jTextAreaSimptomi.setRows(5);
        jScrollPane1.setViewportView(jTextAreaSimptomi);

        jLabel6.setText("Dijagnoza:");

        cbDijagnoza.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabelaRecepti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaRecepti);

        jButtonDodajRecept.setText("Dodaj recept");
        jButtonDodajRecept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajReceptActionPerformed(evt);
            }
        });

        jButtonObrisiRecept.setText("Obri≈°i recept");
        jButtonObrisiRecept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiReceptActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Spisak zakazanih pregleda"));

        tabelaZakazaniPregledi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelaZakazaniPregledi);

        btnIzaberiZakazaniPregled.setText("Izaberi zakazani pregled");
        btnIzaberiZakazaniPregled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiZakazaniPregledActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIzaberiZakazaniPregled)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzaberiZakazaniPregled))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbPacijenti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbLekari, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDatumObavljanjaPregleda)
                            .addComponent(jScrollPane1)
                            .addComponent(cbDijagnoza, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radioButtonDa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioButtonNe)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonDodajRecept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonObrisiRecept)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbPacijenti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbLekari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(radioButtonDa)
                    .addComponent(radioButtonNe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumObavljanjaPregleda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbDijagnoza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDodajRecept)
                    .addComponent(jButtonObrisiRecept))
                .addContainerGap())
        );

        btnSacuvaj.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSacuvaj.setText("Saƒçuvaj pregled");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonDaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonDaActionPerformed
        Lekar lekar = (Lekar) cbLekari.getSelectedItem();
        ZakazaniPregled zp = new ZakazaniPregled();
        zp.setDatumZakazanogPregleda(new Date());
        zp.setLekar(lekar);
        List<ZakazaniPregled> lista = Kontroler.getInstanca().vratiListuZakazanihPregleda(zp);
        ZakazaniPregledTabelaModel ztm = (ZakazaniPregledTabelaModel) tabelaZakazaniPregledi.getModel();
        ztm.setPregledi(lista);
        btnIzaberiZakazaniPregled.setEnabled(true);
    }//GEN-LAST:event_radioButtonDaActionPerformed

    private void jButtonDodajReceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajReceptActionPerformed
        DodavanjeRecepataForma dodaj = new DodavanjeRecepataForma(null, true, lekovi, this);
        dodaj.setVisible(true);
    }//GEN-LAST:event_jButtonDodajReceptActionPerformed

    private void jButtonObrisiReceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiReceptActionPerformed
        int red = tabelaRecepti.getSelectedRow();
        if(red==-1){
            JOptionPane.showMessageDialog(null,"Niste izabrali nijedan recept!","Gre≈°ka",JOptionPane.ERROR_MESSAGE);
            return;
        }
        ReceptTabelaModel rtm = (ReceptTabelaModel) tabelaRecepti.getModel();
        rtm.obrisiRecept(red);
    }//GEN-LAST:event_jButtonObrisiReceptActionPerformed

    private void radioButtonNeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonNeActionPerformed
        ZakazaniPregledTabelaModel ztm = (ZakazaniPregledTabelaModel) tabelaZakazaniPregledi.getModel();
        ztm.setPregledi(new ArrayList<>());
        btnIzaberiZakazaniPregled.setEnabled(false);
    }//GEN-LAST:event_radioButtonNeActionPerformed

    private void btnIzaberiZakazaniPregledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiZakazaniPregledActionPerformed
        int red = tabelaZakazaniPregledi.getSelectedRow();
        if(red==-1){
            JOptionPane.showMessageDialog(null, "Niste izabrali nijedan red", "Gre≈°ka", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ZakazaniPregledTabelaModel ztm = (ZakazaniPregledTabelaModel) tabelaZakazaniPregledi.getModel();
        zakazani = ztm.vratiZakazaniPregled(red);
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        JOptionPane.showMessageDialog(null, "Izabrali ste pregled za pacijenta "+zakazani.getKarton()+" zakazan za danas u "+sdf.format(zakazani.getDatumZakazanogPregleda())+".", "Poruka", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnIzaberiZakazaniPregledActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        Lekar lekar = (Lekar) cbLekari.getSelectedItem();
        Karton karton = (Karton) cbPacijenti.getSelectedItem();
        Dijagnoza dijagnoza = (Dijagnoza) cbDijagnoza.getSelectedItem();
        if(!lekar.equals(Kontroler.getInstanca().getUlogovani())){
            JOptionPane.showMessageDialog(this, "Izabrani i ulogovani lekar moraju biti isti!");
            return;
        }
        String datumObavljanjaPregledaString = txtDatumObavljanjaPregleda.getText();
        Date datumObavljanjaPregleda = null;
        try {
            datumObavljanjaPregleda = sdf.parse(datumObavljanjaPregledaString);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Datum mora biti u formatu dd.MM.yyyy!");
            Logger.getLogger(UnosPregledaForma.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        String simptomi = jTextAreaSimptomi.getText();
        if(simptomi.isEmpty()){
            JOptionPane.showMessageDialog(this, "Niste popunili simptome!");
            return;
        }
        ZakazaniPregled z=null;
        if(radioButtonDa.isSelected()){
            if(zakazani==null){
                JOptionPane.showMessageDialog(this, "Niste izabrali zakazani pregled!", "Gre≈°ka",JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(!karton.equals(zakazani.getKarton())){
                JOptionPane.showMessageDialog(this, "Izabrani pacijent nije isti kao pacijent za kog ste izabrali zakazani pregled!");
                return;
            }
            z=zakazani;
            
        }
        ReceptTabelaModel rtm = (ReceptTabelaModel) tabelaRecepti.getModel();
        List<Recept> recepti = rtm.getRecepti();
        if(recepti.isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate prepisati bar jedan recept!","Gre≈°ka",JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (int i=0;i<recepti.size();i++) {
            Recept r1 = recepti.get(i);
            for(int j=i+1;j<recepti.size();j++){
                Recept r2 = recepti.get(j);
                if(r1.getLek().equals(r2.getLek())){
                    JOptionPane.showMessageDialog(this, "Lek "+r1.getLek()+" ste prepisali vi≈°e od jedanput!");
                    return;
                }
            }
        }
        System.out.println("Sve je u redu!");
        Pregled pregled = new Pregled(new Long(-1), datumObavljanjaPregleda, simptomi, lekar, karton, dijagnoza, z, recepti);
        ServerskiOdgovor so = Kontroler.getInstanca().sacuvajPregled(pregled);
        if(so.getResponseStatus()==ResponseStatus.ERROR){
            JOptionPane.showMessageDialog(this, so.getPoruka(),"Gre≈°ka",JOptionPane.ERROR_MESSAGE);
            
        }
        else{
            JOptionPane.showMessageDialog(this, so.getPoruka(),"Uspe≈°no saƒçuvano",JOptionPane.INFORMATION_MESSAGE);
            ocistiFormu();
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosPregledaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosPregledaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosPregledaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosPregledaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UnosPregledaForma dialog = new UnosPregledaForma(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzaberiZakazaniPregled;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cbDijagnoza;
    private javax.swing.JComboBox cbLekari;
    private javax.swing.JComboBox cbPacijenti;
    private javax.swing.JButton jButtonDodajRecept;
    private javax.swing.JButton jButtonObrisiRecept;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaSimptomi;
    private javax.swing.JRadioButton radioButtonDa;
    private javax.swing.JRadioButton radioButtonNe;
    private javax.swing.JTable tabelaRecepti;
    private javax.swing.JTable tabelaZakazaniPregledi;
    private javax.swing.JTextField txtDatumObavljanjaPregleda;
    // End of variables declaration//GEN-END:variables

    private void centriraj() {
        setLocationRelativeTo(null);
    }

    private void postaviNepromenljivostDimenzija() {
        setResizable(false);
    }

  

    private void ucitajListuKartona() {
        cbPacijenti.removeAllItems();
        
        Karton karton = new Karton();
        List<Karton> kartoni = Kontroler.getInstanca().vratiListuKartona(karton);
        for (Karton k : kartoni) {
            cbPacijenti.addItem(k);
        }
    }

    private void ucitajListuLekara() {
        cbLekari.removeAllItems();
        
        Lekar lekar = new Lekar();
        Korisnik k = lekar;
        List<Lekar> lekari = Kontroler.getInstanca().vratiListuLekara(k);
        
        for (Lekar l : lekari) {
            cbLekari.addItem(l);
        }
    }

    private void ucitajListuDijagnoza() {
        cbDijagnoza.removeAllItems();
        
        Dijagnoza dijagnoza= new Dijagnoza();
        List<Dijagnoza> dijagnoze = Kontroler.getInstanca().vratiListuDijagnoza(dijagnoza);
        
        for (Dijagnoza d : dijagnoze) {
            cbDijagnoza.addItem(d);
        }
    }

    private void postaviDatumObavljanjaPregleda() {
        Date datum = new Date();
        txtDatumObavljanjaPregleda.setText(sdf.format(datum));
        txtDatumObavljanjaPregleda.setEditable(false);
    }

    private void srediTabeluRecepata() {
        ReceptTabelaModel rtm = new ReceptTabelaModel();
        tabelaRecepti.setModel(rtm);
    }

    private void ucitajListuLekova() {
        Lek lek = new Lek();
        lekovi = Kontroler.getInstanca().vratiListuLekova(lek);
    }

    private void srediRBZakazan() {
        ButtonGroup group = new ButtonGroup();
        group.add(radioButtonDa);
        group.add(radioButtonNe);
        radioButtonNe.setSelected(true);
    }

    void dodajRecept(Recept recept) {
        ReceptTabelaModel rtm = (ReceptTabelaModel) tabelaRecepti.getModel();
        rtm.dodajRecept(recept);
    }

    private void srediKoloneRecepata() {
        TableColumn naziv = tabelaRecepti.getColumnModel().getColumn(0);
        naziv.setPreferredWidth(80);
        TableColumn datum = tabelaRecepti.getColumnModel().getColumn(1);
        datum.setPreferredWidth(130);
        TableColumn hitno = tabelaRecepti.getColumnModel().getColumn(2);
        hitno.setPreferredWidth(10);
        TableColumn ukupnaDnevnaDoza = tabelaRecepti.getColumnModel().getColumn(3);
        ukupnaDnevnaDoza.setPreferredWidth(115);
        TableColumn jedinica = tabelaRecepti.getColumnModel().getColumn(4);
        jedinica.setPreferredWidth(40);
    }

    private void srediTabeluZakazanihPregleda() {
        ZakazaniPregledTabelaModel ztm = new ZakazaniPregledTabelaModel();
        tabelaZakazaniPregledi.setModel(ztm);
    }

    private void srediDugme() {
        btnIzaberiZakazaniPregled.setEnabled(false);
    }

    private void ocistiFormu() {
        cbDijagnoza.setSelectedItem(cbDijagnoza.getItemAt(0));
        cbLekari.setSelectedItem(cbLekari.getItemAt(0));
        cbPacijenti.setSelectedItem(cbPacijenti.getItemAt(0));
        radioButtonNe.setSelected(true);
        txtDatumObavljanjaPregleda.setText(sdf.format(new Date()));
        jTextAreaSimptomi.setText("");
        ZakazaniPregledTabelaModel ztm = (ZakazaniPregledTabelaModel) tabelaZakazaniPregledi.getModel();
        ReceptTabelaModel rtm = (ReceptTabelaModel) tabelaRecepti.getModel();
        ztm.setPregledi(new ArrayList<>());
        rtm.setRecepti(new ArrayList<>());
        btnIzaberiZakazaniPregled.setEnabled(false);
    }
}
